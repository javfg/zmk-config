/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ,-----------------------------------------.                  ,-----------------------------------------.
// | ESC  |   1  |   2  |   3  |   4  |   5  |                  |  6   |  7   |  8   |  9   |  0   | BSPC |
// |------+------+------+------+------+------|                  |------+------+------+------+------+------|
// | TAB  |   Q  |   W  |   E  |   R  |   T  |                  |  Y   |  U   |  I   |  O   |  P   |  \   |
// |------+------+------+------+------+------|                  |------+------+------+------+------+------|
// | LSCL |   A  |   S  |   D  |   F  |   G  |------.    ,------|  H   |  J   |  K   |  L   |  ;   |  '   |
// |------+------+------+------+------+------|   [  |    |   ]  |------+------+------+------+------+------|
// | LCTL |   Z  |   X  |   C  |   V  |   B  |------|    |------|  N   |  M   |  ,   |  .   |  /   | DEL  |
// `----------------------------------------/      /     \       \----------------------------------------´
//                  | LGUI |  TT1 | LALT | /  SPC /       \  ENT  \ | RALT | MO1  | MO2  |
//                  `--------------------''------´         `-------''--------------------´
			bindings = <
&kp ESC       &kp NUM_1  &kp NUM_2  &kp NUM_3  &kp NUM_4  &kp NUM_5                        &kp NUM_6  &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp NUM_0  &kp BKSP
&kp TAB           &kp Q      &kp W      &kp E      &kp R      &kp T                            &kp Y      &kp U      &kp I      &kp O      &kp P  &kp BSLH
&mt LSFT CLCK     &kp A      &kp S      &kp D      &kp F      &kp G                            &kp H      &kp J      &kp K      &kp L   &kp SCLN  &kp QUOT
&kp LCTL          &kp Z      &kp X      &kp C      &kp V      &kp B     &kp LBKT  &kp RBKT     &kp N      &kp M   &kp CMMA    &kp DOT   &kp FSLH   &kp DEL
                                     &kp LGUI      &mo 1      &kp LALT  &kp SPC   &kp RET   &kp RALT      &mo 1      &mo 2
			>;

			sensor-bindings = <&inc_dec_cp M_VOLU M_VOLD>;
		};

		lower_layer {
// ,-----------------------------------------.                  ,-----------------------------------------.
// | TRNS |   `  |      |      |      |      |                  |      |      |      |  -   |  =   | TRNS |
// |------+------+------+------+------+------|                  |------+------+------+------+------+------|
// | TRNS |      |      |      |      |  <   |                  |  >   |      |      | HOME | INS  | PGUP |
// |------+------+------+------+------+------|                  |------+------+------+------+------+------|
// | TRNS |      |      |      |      |  (   |------.    ,------|  )   |      | TRNS | END  |  UP  | PGDN |
// |------+------+------+------+------+------|   [  |    |  ]   |------+------+------+------+------+------|
// | TRNS | TRNS | TRNS | TRNS | TRNS |  {   |------|    |------|  }   |      |      | LEFT | DOWN | RGHT |
// `----------------------------------------/      /      \      \----------------------------------------´
//                  | TRNS | TRNS | TRNS | / TRNS /        \ TRNS \ | TRNS | TRNS | TRNS |
//                  `--------------------''------´          `------''--------------------´
			bindings = <
&trans &kp GRAV    &none    &none    &none     &none                        &none    &none    &none  &kp MINUS   &kp EQL    &trans
&trans    &none    &none    &none    &none     &none                        &none    &none    &none   &kp HOME   &kp INS  &kp PGUP
&trans    &none    &none    &none    &none  &kp LPRN                     &kp RPRN    &none   &trans    &kp END  &kp RARW  &kp PGDN
&trans   &trans   &trans   &trans   &trans  &kp LCUR  &trans     &trans  &kp RCUR   &trans   &trans   &kp LARW  &kp DARW  &kp RARW
                           &trans   &trans    &trans  &trans     &trans    &trans   &trans   &trans
			>;

			sensor-bindings = <&inc_dec_cp M_VOLU M_VOLD>;
		};

		raise_layer {
// ,-----------------------------------------.                  ,-----------------------------------------.
// |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |                  |  F7  |  F8  |  F9  | F10  | F11  | F12  |
// |------+------+------+------+------+------|                  |------+------+------+------+------+------|
// | BT_C   BT_1 | BT_2 | BT_3 | BT_4 | BT_5 |                  |      |      |      |      | PSCR | MUTE |
// |------+------+------+------+------+------|                  |------+------+------+------+------+------|
// |      |      |      |      |      |      |------.    ,------|      |      |      |      | BTN5 | VOLU |
// |------+------+------+------+------+------| REST |    | BLDR |------+------+------+------+------+------|
// |      |      |      |      |      |      |------|    |------|      |      |      |      | BTN4 | VOLD |
// `----------------------------------------/      /      \      \----------------------------------------´
//                  | TRNS | TRNS | TRNS | / TRNS /        \ TRNS \ | TRNS | TRNS | TRNS |
//                  `--------------------''------´          `------''--------------------´
			bindings = <
&kp F1     &kp F2       &kp F3       &kp F4       &kp F5       &kp F6                           &kp F7   &kp F8    &kp F9    &kp F10   &kp F11     &kp F12
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                     &trans   &trans    &trans     &trans  &kp PRSC  &cp M_MUTE
&trans     &trans       &trans       &trans       &trans       &trans                           &trans   &trans    &trans     &trans    &trans  &cp M_VOLU
&trans     &trans       &trans       &trans       &trans       &trans       &reset &bootloader  &trans   &trans    &trans     &trans    &trans  &cp M_VOLD
                        &trans       &trans       &trans       &trans       &trans      &trans  &trans   &trans
			>;

			sensor-bindings = <&inc_dec_cp M_VOLU M_VOLD>;
		};
	};
};
